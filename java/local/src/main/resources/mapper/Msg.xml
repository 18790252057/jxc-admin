<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toesbieya.my.mapper.MsgMapper">
    <sql id="searchCondition">
        <if test="title != null and title != ''">
            and title like "%"#{title}"%"
        </if>
        <if test="type != null and type != ''">
            and type in (${type})
        </if>
        <if test="uid != null">
            and uid=#{uid}
        </if>
        <if test="status != null and status != ''">
            and status in (${status})
        </if>
    </sql>

    <sql id="unreadCondition">
        where status = 1
        and ptime <![CDATA[ >= ]]> #{ctime}
        and (broadcast = 1 or broadcast = 0 and find_in_set(recipient, #{uid}))
        and id not in (select mid from msg_state where uid = #{uid})
    </sql>

    <insert id="insert" parameterType="com.toesbieya.my.model.entity.Msg" useGeneratedKeys="true" keyProperty="id">
        insert into msg (title, content, type, cid, cname, ctime,
                         pid, pname, ptime, wid, wname, wtime, status, broadcast, recipient)
        values (#{title}, #{content}, #{type}, #{cid}, #{cname}, #{ctime}, #{pid},
                #{pname}, #{ptime}, #{wid}, #{wname}, #{wtime}, #{status}, #{broadcast}, #{recipient})
    </insert>

    <insert id="insertState" parameterType="com.toesbieya.my.model.entity.MsgState">
        insert into msg_state (mid, uid, time)
        values (#{mid}, #{uid}, #{time})
    </insert>

    <select id="checkRead" resultType="boolean">
        select if(count(1) > 0, 1, 0)
        from msg_state
        where mid = #{mid}
          and uid = #{uid}
    </select>

    <select id="search" resultType="com.toesbieya.my.model.entity.Msg"
            parameterType="com.toesbieya.my.model.vo.search.MsgSearch">
        select *
        from msg where 1
        <include refid="searchCondition"/>
        order by id desc
    </select>

    <update id="update" parameterType="com.toesbieya.my.model.entity.Msg">
        update msg
        set title=#{title},
            content=#{content},
            type=#{type},
            pid=#{pid},
            pname=#{pname},
            ptime=#{ptime},
            wid=#{wid},
            wname=#{wname},
            wtime=#{wtime},
            status=#{status},
            broadcast=#{broadcast},
            recipient=#{recipient}
        where id = #{id}
    </update>

    <update id="withdraw">
        update msg
        set status=#{status},
            wid=#{wid},
            wname=#{wname},
            wtime=#{wtime}
        where id = #{id}
          and status = 1
    </update>

    <delete id="del">
        delete
        from msg
        where id = #{id}
          and status = 0
    </delete>

    <select id="getReadByUser" parameterType="com.toesbieya.my.model.vo.search.MsgPersonalSearch"
            resultType="com.toesbieya.my.model.entity.Msg">
        select a.id,
               a.title,
               a.content,
               a.type,
               a.pname,
               a.ptime
        from msg a
                     join msg_state b on a.id = b.mid
        where b.uid = #{uid}
        order by a.id desc
    </select>

    <select id="getUnreadByUser" parameterType="com.toesbieya.my.model.vo.search.MsgPersonalSearch"
            resultType="com.toesbieya.my.model.entity.Msg">
        select id,
               title,
               content,
               type,
               pname,
               ptime
        from msg
        <include refid="unreadCondition"/>
        order by id desc
    </select>

    <select id="getUnreadCountByUser" parameterType="com.toesbieya.my.model.vo.search.MsgPersonalSearch"
            resultType="java.lang.Integer">
        select count(1)
        from msg
        <include refid="unreadCondition"/>
    </select>
</mapper>